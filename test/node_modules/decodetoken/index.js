const Rijndael = require('rijndael-js');
const Base64 = require('base64-js');
const PBKDF2 = require('pbkdf2');
const { unpad }  = require('pkcs7');

function decodeToken(token, secretPass){
  // Se decodifica la URI
  var ciphertext = decodeURIComponent(token);
  
  // Token con "salt" e "iv"
  var cipherTextBytesWithSaltAndIv = Base64.toByteArray(ciphertext);
  
  // Valores en array de bytes
  var saltStringBytes = cipherTextBytesWithSaltAndIv.slice(0, 32);
  var ivStringBytes = cipherTextBytesWithSaltAndIv.slice(32, 64);
  var cipherTextBytes = cipherTextBytesWithSaltAndIv.slice(64, cipherTextBytesWithSaltAndIv.length - 64 + 64);

  // Salt en tipo Buffer
  var newSalt = Buffer.from(saltStringBytes);  
  
  // Conversion de password con cifrado PBKDF2
  var password = PBKDF2.pbkdf2Sync(secretPass, newSalt, 1000, 32, 'SHA1');

  // Descifrado Rijndael
  let cipher = new Rijndael(password, "cbc");
  var final = cipher.decrypt(cipherTextBytes, 256, ivStringBytes);

  // Parseo a JSON (unpad previo PKCS7)
  var stringUser = String.fromCharCode.apply(String, unpad(final, 32));
  //var jsonUser = JSON.parse(stringUser);
  
  // Se retorna el usuario
  return stringUser;
}

module.exports = {
  decodeToken
};